{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Victor\\\\Documents\\\\GitHub\\\\InvisibleTaskManager\\\\src\\\\pages\\\\signin\\\\index.js\";\nimport React from \"react\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\nimport { Formik } from \"formik\";\nimport { validationSchema } from \"./validation\";\nimport { styles } from \"./styles\";\nimport FormField from \"./FormField\";\nexport default function LOGIN() {\n  var _this = this;\n\n  function onSubmitHandler(values) {\n    Alert.alert(\"Register Successfully!\", \"Form data: \" + JSON.stringify(values));\n  }\n\n  function isFormValid(isValid, touched) {\n    return isValid && Object.keys(touched).length !== 0;\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(SafeAreaView, {\n    style: styles.topSafeArea,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }), React.createElement(StatusBar, {\n    style: \"light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }), React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.headerText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, \"LOGIN\")), React.createElement(KeyboardAwareScrollView, {\n    style: styles.content,\n    showsVerticalScrollIndicator: false,\n    keyboardShouldPersistTaps: \"handled\",\n    extraScrollHeight: 150,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, React.createElement(Formik, {\n    initialValues: {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\"\n    },\n    onSubmit: onSubmitHandler,\n    validationSchema: validationSchema,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, function (_ref) {\n    var handleChange = _ref.handleChange,\n        handleBlur = _ref.handleBlur,\n        handleSubmit = _ref.handleSubmit,\n        values = _ref.values,\n        errors = _ref.errors,\n        touched = _ref.touched,\n        isValid = _ref.isValid;\n    return React.createElement(React.Fragment, null, React.createElement(FormField, {\n      field: \"email\",\n      label: \"Email Address\",\n      values: values,\n      touched: touched,\n      errors: errors,\n      handleChange: handleChange,\n      handleBlur: handleBlur,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }), React.createElement(FormField, {\n      field: \"password\",\n      label: \"Password\",\n      secureTextEntry: true,\n      values: values,\n      touched: touched,\n      errors: errors,\n      handleChange: handleChange,\n      handleBlur: handleBlur,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }), React.createElement(TouchableOpacity, {\n      onPress: handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      style: [styles.button],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 19\n      }\n    }, React.createElement(Text, {\n      style: styles.buttonText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    }, \"LOGIN\"))));\n  }))));\n}","map":{"version":3,"sources":["C:/Users/Victor/Documents/GitHub/InvisibleTaskManager/src/pages/signin/index.js"],"names":["React","StatusBar","KeyboardAwareScrollView","Formik","validationSchema","styles","FormField","LOGIN","onSubmitHandler","values","Alert","alert","JSON","stringify","isFormValid","isValid","touched","Object","keys","length","topSafeArea","container","header","headerText","content","firstName","lastName","email","password","confirmPassword","handleChange","handleBlur","handleSubmit","errors","button","buttonText"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  SafeAreaView,\r\n  View,\r\n  Text,\r\n  TouchableOpacity,\r\n  TextInput,\r\n  Alert,\r\n} from \"react-native\";\r\nimport { StatusBar } from \"expo-status-bar\";\r\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\r\nimport { Formik } from \"formik\";\r\nimport { validationSchema } from \"./validation\";\r\nimport { styles } from \"./styles\";\r\nimport FormField from \"./FormField\";\r\n\r\nexport default function LOGIN() {\r\n  function onSubmitHandler(values) {\r\n    // https://reactnative.dev/docs/alert\r\n    Alert.alert(\r\n      \"Register Successfully!\",\r\n      \"Form data: \" + JSON.stringify(values)\r\n    );\r\n  }\r\n\r\n  function isFormValid(isValid, touched) {\r\n    return isValid && Object.keys(touched).length !== 0;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <SafeAreaView style={styles.topSafeArea} />\r\n\r\n      <StatusBar style=\"light\" />\r\n\r\n      <SafeAreaView style={styles.container}>\r\n        <View style={styles.header}>\r\n          <Text style={styles.headerText}>LOGIN</Text>\r\n        </View>\r\n\r\n        {/* https://github.com/APSL/react-native-keyboard-aware-scroll-view */}\r\n        <KeyboardAwareScrollView\r\n          style={styles.content}\r\n          showsVerticalScrollIndicator={false}\r\n          keyboardShouldPersistTaps=\"handled\"\r\n          extraScrollHeight={150}\r\n        >\r\n          {/* https://formik.org/docs/overview */}\r\n          <Formik\r\n            initialValues={{\r\n              firstName: \"\",\r\n              lastName: \"\",\r\n              email: \"\",\r\n              password: \"\",\r\n              confirmPassword: \"\",\r\n            }}\r\n            onSubmit={onSubmitHandler}\r\n            validationSchema={validationSchema}\r\n          >\r\n            {({\r\n              handleChange,\r\n              handleBlur,\r\n              handleSubmit,\r\n              values,\r\n              errors,\r\n              touched,\r\n              isValid,\r\n            }) => (\r\n              <>\r\n\r\n                <FormField\r\n                  field=\"email\"\r\n                  label=\"Email Address\"\r\n                  values={values}\r\n                  touched={touched}\r\n                  errors={errors}\r\n                  handleChange={handleChange}\r\n                  handleBlur={handleBlur}\r\n                />\r\n\r\n                <FormField\r\n                  field=\"password\"\r\n                  label=\"Password\"\r\n                  secureTextEntry={true}\r\n                  values={values}\r\n                  touched={touched}\r\n                  errors={errors}\r\n                  handleChange={handleChange}\r\n                  handleBlur={handleBlur}\r\n                />\r\n\r\n                <TouchableOpacity\r\n                  onPress={handleSubmit}\r\n                >\r\n                  <View\r\n                    style={[\r\n                      styles.button,\r\n                    ]}\r\n                  >\r\n                    <Text style={styles.buttonText}>LOGIN</Text>\r\n                  </View>\r\n                </TouchableOpacity>\r\n              </>\r\n            )}\r\n          </Formik>\r\n        </KeyboardAwareScrollView>\r\n      </SafeAreaView>\r\n    </>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}