{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Victor\\\\Documents\\\\GitHub\\\\InvisibleTaskManager\\\\src\\\\pages\\\\signin\\\\FormField.js\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { styles } from \"./styles\";\nexport default function FormField(_ref) {\n  var field = _ref.field,\n      label = _ref.label,\n      secureTextEntry = _ref.secureTextEntry,\n      autoCapitalize = _ref.autoCapitalize,\n      values = _ref.values,\n      touched = _ref.touched,\n      errors = _ref.errors,\n      handleChange = _ref.handleChange,\n      handleBlur = _ref.handleBlur;\n  return React.createElement(View, {\n    style: styles.formGroup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, label), React.createElement(TextInput, {\n    style: styles.input,\n    value: values[field],\n    onChangeText: handleChange(field),\n    onBlur: handleBlur(field),\n    secureTextEntry: secureTextEntry,\n    autoCapitalize: autoCapitalize || \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }), touched[field] && errors[field] ? React.createElement(View, {\n    style: styles.errorContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.errorText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, errors[field])) : null);\n}","map":{"version":3,"sources":["C:/Users/Victor/Documents/GitHub/InvisibleTaskManager/src/pages/signin/FormField.js"],"names":["React","styles","FormField","field","label","secureTextEntry","autoCapitalize","values","touched","errors","handleChange","handleBlur","formGroup","input","errorContainer","errorText"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,MAAT;AAEA,eAAe,SAASC,SAAT,OAUZ;AAAA,MATDC,KASC,QATDA,KASC;AAAA,MARDC,KAQC,QARDA,KAQC;AAAA,MAPDC,eAOC,QAPDA,eAOC;AAAA,MANDC,cAMC,QANDA,cAMC;AAAA,MALDC,MAKC,QALDA,MAKC;AAAA,MAJDC,OAIC,QAJDA,OAIC;AAAA,MAHDC,MAGC,QAHDA,MAGC;AAAA,MAFDC,YAEC,QAFDA,YAEC;AAAA,MADDC,UACC,QADDA,UACC;AACD,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEV,MAAM,CAACW,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEX,MAAM,CAACG,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BA,KAA5B,CADF,EAGE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEH,MAAM,CAACY,KADhB;AAEE,IAAA,KAAK,EAAEN,MAAM,CAACJ,KAAD,CAFf;AAGE,IAAA,YAAY,EAAEO,YAAY,CAACP,KAAD,CAH5B;AAIE,IAAA,MAAM,EAAEQ,UAAU,CAACR,KAAD,CAJpB;AAKE,IAAA,eAAe,EAAEE,eALnB;AAME,IAAA,cAAc,EAAEC,cAAc,IAAI,MANpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAYGE,OAAO,CAACL,KAAD,CAAP,IAAkBM,MAAM,CAACN,KAAD,CAAxB,GACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,MAAM,CAACa,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEb,MAAM,CAACc,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCN,MAAM,CAACN,KAAD,CAAtC,CADF,CADD,GAIG,IAhBN,CADF;AAoBD","sourcesContent":["import React from \"react\";\nimport { View, Text, TextInput } from \"react-native\";\nimport { styles } from \"./styles\";\n\nexport default function FormField({\n  field,\n  label,\n  secureTextEntry,\n  autoCapitalize,\n  values,\n  touched,\n  errors,\n  handleChange,\n  handleBlur,\n}) {\n  return (\n    <View style={styles.formGroup}>\n      <Text style={styles.label}>{label}</Text>\n\n      <TextInput\n        style={styles.input}\n        value={values[field]}\n        onChangeText={handleChange(field)}\n        onBlur={handleBlur(field)}\n        secureTextEntry={secureTextEntry}\n        autoCapitalize={autoCapitalize || \"none\"}\n      />\n\n      {touched[field] && errors[field] ? (\n        <View style={styles.errorContainer}>\n          <Text style={styles.errorText}>{errors[field]}</Text>\n        </View>\n      ) : null}\n    </View>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}